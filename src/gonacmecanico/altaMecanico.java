package gonacmecanico;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import logica.Conector;

public class altaMecanico extends javax.swing.JFrame {

    // Se instancia una conexion de la clase conecta
    Conector con = new Conector();
    // se asigna la conexion a la base de datos con la variable cn
    Connection cn = con.conecta();

    String Activo = "no";
    DefaultTableModel modelo;

    public altaMecanico() {
        initComponents();
        this.setLocationRelativeTo(null);
        inicio();
        mostrarTabla();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jbSalir = new javax.swing.JButton();
        btnNuevo = new javax.swing.JButton();
        btnGrabar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jlNombre = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtPaterno = new javax.swing.JTextField();
        jlUsuario = new javax.swing.JLabel();
        jlPaterno = new javax.swing.JLabel();
        txtArea = new javax.swing.JTextField();
        jlMaterno = new javax.swing.JLabel();
        txtMaterno = new javax.swing.JTextField();
        jlMunicipio = new javax.swing.JLabel();
        txtUsuario = new javax.swing.JTextField();
        jlColonia = new javax.swing.JLabel();
        txtClave = new javax.swing.JTextField();
        jlCelular = new javax.swing.JLabel();
        txtCelular = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        jlEmail = new javax.swing.JLabel();
        chkActivo = new javax.swing.JCheckBox();
        txtId = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Arial Black", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Administración de Mecánicos");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 725, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        jbSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/grafico/salir.png"))); // NOI18N
        jbSalir.setText("SALIR");
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/grafico/nuevo.png"))); // NOI18N
        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnGrabar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/grafico/agregar.png"))); // NOI18N
        btnGrabar.setText("Grabar");
        btnGrabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGrabarActionPerformed(evt);
            }
        });

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/grafico/eliminar.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/grafico/editar.png"))); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/grafico/modificar.png"))); // NOI18N
        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(btnNuevo)
                .addGap(18, 18, 18)
                .addComponent(btnGrabar)
                .addGap(18, 18, 18)
                .addComponent(btnEditar)
                .addGap(18, 18, 18)
                .addComponent(btnActualizar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCancelar)
                .addGap(18, 18, 18)
                .addComponent(jbSalir)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(btnNuevo)
                .addComponent(btnGrabar)
                .addComponent(btnEditar)
                .addComponent(btnActualizar))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jbSalir)
                .addComponent(btnCancelar))
        );

        jPanel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jlNombre.setText("Nombre");

        jlUsuario.setText("Area");

        jlPaterno.setText("Paterno");

        jlMaterno.setText("Materno");

        jlMunicipio.setText("Usuario");

        jlColonia.setText("Clave");

        jlCelular.setText("Celular");

        jlEmail.setText("Email");

        chkActivo.setText("Activo");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlMaterno, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlPaterno, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtId))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMaterno, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPaterno, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlMunicipio, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlColonia, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlCelular)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtArea, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chkActivo)
                            .addComponent(jlEmail))))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCelular)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtClave, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(txtEmail))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlNombre)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPaterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlPaterno))
                        .addGap(24, 24, 24)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMaterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlMaterno)
                            .addComponent(jlCelular)
                            .addComponent(txtCelular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlMunicipio)
                            .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtClave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlColonia))))
                .addGap(23, 23, 23)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlUsuario)
                    .addComponent(jlEmail)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkActivo)
                    .addComponent(txtId))
                .addContainerGap())
        );

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tabla);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 732, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 746, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        try {
            cn.close();
        } catch (SQLException ex) {
            Logger.getLogger(altaMecanico.class.getName()).log(Level.SEVERE, null, ex);
        }
        Principal frm = new Principal();
        this.dispose();
        frm.setVisible(true);
    }//GEN-LAST:event_jbSalirActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        btnNuevo.setEnabled(false);
        btnGrabar.setEnabled(true);
        btnEditar.setEnabled(false);
        btnCancelar.setEnabled(true);
        jlNombre.setEnabled(true);
        jlPaterno.setEnabled(true);
        jlMaterno.setEnabled(true);
        jlUsuario.setEnabled(true);
        jlMunicipio.setEnabled(true);
        jlColonia.setEnabled(true);
        jlCelular.setEnabled(true);
        jlEmail.setEnabled(true);
        txtNombre.setEnabled(true);
        txtPaterno.setEnabled(true);
        txtMaterno.setEnabled(true);
        txtArea.setEnabled(true);
        txtUsuario.setEnabled(true);
        txtClave.setEnabled(true);
        txtCelular.setEnabled(true);
        txtEmail.setEnabled(true);
        
        
        
        

    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnGrabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGrabarActionPerformed
       if (txtNombre.getText().equals("")){
            JOptionPane.showMessageDialog(this, "falta el nombre");
            txtNombre.requestFocus();
        }else if (txtPaterno.getText().equals("")){
            JOptionPane.showMessageDialog(this, "falta el apellido paterno");
            txtPaterno.requestFocus();
        }else if (txtMaterno.getText().equals("")){
            JOptionPane.showMessageDialog(this, "falta el apellido materno");
            txtMaterno.requestFocus();
        }else if (txtArea.getText().equals("")){
            JOptionPane.showMessageDialog(this, "falta el area asignada");
            txtArea.requestFocus();
        }else if (txtUsuario.getText().equals("")){
            JOptionPane.showMessageDialog(this, "falta el Usuario");
            txtUsuario.requestFocus();
        }else if (txtClave.getText().equals("")){
            JOptionPane.showMessageDialog(this, "falta la clave");
            txtClave.requestFocus();
        }else if (txtCelular.getText().equals("")){
            JOptionPane.showMessageDialog(this, "falta el numero de celular");
            txtCelular.requestFocus();
        }else if (txtEmail.getText().equals("")){
            JOptionPane.showMessageDialog(this, "falta el Email");
            txtEmail.requestFocus();
        }else {
        
        String nombre=txtNombre.getText();
        String paterno=txtPaterno.getText();
        String materno=txtMaterno.getText();
        String area=txtArea.getText();
        String usuario=txtUsuario.getText();
        String clave=txtClave.getText();
        String celular=txtCelular.getText();
        String email=txtEmail.getText();
        String completo=nombre+" "+paterno+" "+materno;
        String activo="si";
        int contador=0;
        
        try {
                // revisamos si no hay un nombre o un usario ya en la bd con los mismos datos
                String sql="SELECT * FROM mecanico WHERE usuario='"+usuario+
                        "'";
                Statement st;
                st = cn.createStatement();
                ResultSet rs=st.executeQuery(sql);
               
                while (rs.next()){
                    JOptionPane.showMessageDialog(null,"El Usuario esta repetido en la base de datos");
                    contador++;
                    
                }
                st.close();
                rs.close();
            } catch (SQLException ex) {
                Logger.getLogger(altaPersonal.class.getName()).log(Level.SEVERE, null, ex);
            }
        if (contador==0){
            try {
            //se prepara a insertarlo en la tabla de usuarios   
            Statement insertar=cn.createStatement();
            String sql="INSERT INTO mecanico (nombre,paterno,materno,completo,area,usuario,clave,celular,email,activo) VALUES ('"+
                    nombre+"','"+
                    paterno+"','"+
                    materno+"','"+
                    completo+"','"+
                    area+"','"+
                    usuario+"','"+
                    clave+"','"+
                    celular+"','"+
                    email+"','"+
                    activo+"')";
                    
            insertar.executeUpdate(sql);
            
            //lo agregamos en los usuarios
            Statement st=cn.createStatement();
            sql="INSERT INTO usuario (nombre,usuario,clave,categoria) VALUES ('"+
                    completo+"','"+usuario+"','"+clave+"','Mecanico')";
            st.executeUpdate(sql);
                    
            
            
            JOptionPane.showMessageDialog(this,"se agregado nuevo mecanico");
            mostrarTabla();
            inicio();
            limpiar();
            
                       } catch (SQLException ex) {
            Logger.getLogger(altaPersonal.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        }
        }
    }//GEN-LAST:event_btnGrabarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        
        int fila = tabla.getSelectedRow();
        
       if (fila>=0){
           btnNuevo.setEnabled(false);
        btnGrabar.setEnabled(false);
        btnEditar.setEnabled(false);
        btnActualizar.setEnabled(true);
        btnCancelar.setEnabled(true);
        txtId.setVisible(false);
        jlNombre.setEnabled(true);
        jlPaterno.setEnabled(true);
        jlMaterno.setEnabled(true);
        jlUsuario.setEnabled(true);
        jlMunicipio.setEnabled(true);
        jlColonia.setEnabled(true);
        jlCelular.setEnabled(true);
        jlEmail.setEnabled(true);
        txtNombre.setEnabled(true);
        txtPaterno.setEnabled(true);
        txtMaterno.setEnabled(true);
        txtArea.setEnabled(true);
        txtUsuario.setEnabled(false);
        txtClave.setEnabled(true);
        txtCelular.setEnabled(true);
        txtEmail.setEnabled(true);
        chkActivo.setEnabled(true);
           try {
               String id=tabla.getValueAt(fila, 0).toString();
               String sql="SELECT * FROM mecanico where id='"+id+"'";
               Statement st;
               st=cn.createStatement();
               ResultSet rs=st.executeQuery(sql);
               while (rs.next()){
                   txtId.setText(rs.getString("id"));
                   txtNombre.setText(rs.getString("nombre"));
                   txtPaterno.setText(rs.getString("paterno"));
                   txtMaterno.setText(rs.getString("materno"));
                   txtArea.setText(rs.getString("area"));
                   txtUsuario.setText(rs.getString("usuario"));
                   txtClave.setText(rs.getString("clave"));
                   txtCelular.setText(rs.getString("celular"));
                   txtEmail.setText(rs.getString("email"));
                   
               }
               
           } catch (SQLException ex) {
               Logger.getLogger(altaMecanico.class.getName()).log(Level.SEVERE, null, ex);
           }
       }else{
          JOptionPane.showMessageDialog(this,"Selecciona un elemento de la tabla"); 
       }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
       inicio();
       limpiar();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
       if (txtNombre.getText().equals("")){
            JOptionPane.showMessageDialog(this, "falta el nombre");
            txtNombre.requestFocus();
        }else if (txtPaterno.getText().equals("")){
            JOptionPane.showMessageDialog(this, "falta el apellido paterno");
            txtPaterno.requestFocus();
        }else if (txtMaterno.getText().equals("")){
            JOptionPane.showMessageDialog(this, "falta el apellido materno");
            txtMaterno.requestFocus();
        }else if (txtArea.getText().equals("")){
            JOptionPane.showMessageDialog(this, "falta el area asignada");
            txtArea.requestFocus();
        }else if (txtUsuario.getText().equals("")){
            JOptionPane.showMessageDialog(this, "falta el Usuario");
            txtUsuario.requestFocus();
        }else if (txtClave.getText().equals("")){
            JOptionPane.showMessageDialog(this, "falta la clave");
            txtClave.requestFocus();
        }else if (txtCelular.getText().equals("")){
            JOptionPane.showMessageDialog(this, "falta el numero de celular");
            txtCelular.requestFocus();
        }else if (txtEmail.getText().equals("")){
            JOptionPane.showMessageDialog(this, "falta el Email");
            txtEmail.requestFocus();
        }else{
        String id=txtId.getText();
        String nombre=txtNombre.getText();
        String paterno=txtPaterno.getText();
        String materno=txtMaterno.getText();
        String area=txtArea.getText();
        String clave=txtClave.getText();
        String celular=txtCelular.getText();
        String email=txtEmail.getText();
        String completo=nombre+" "+paterno+" "+materno;
        String activo="no";
        if (chkActivo.isSelected()){
            activo="si";
        }
        
            try {
            Statement st;
            st=cn.createStatement();
            String sql="UPDATE mecanico SET nombre='"+nombre+"',paterno='"+paterno+"',"+
                    "materno='"+materno+"',completo='"+completo+"',area='"+area+"',clave='"+clave+"',"
                    + "celular='"+celular+"',email='"+email+"',activo='"+activo+"' WHERE id='"+id+"'";
            st.executeUpdate(sql);
            
            //lo agregamos en los usuarios
            st=cn.createStatement();
            sql="UPDATE usuario set clave='"+clave+"' where usuario='"+txtUsuario.getText()+"' and categoria='Mecanico'";
            st.executeUpdate(sql);
            JOptionPane.showMessageDialog(this, "Mecanico actualizado");
            inicio();
            limpiar();
            mostrarTabla();
           } catch (SQLException ex) {
               Logger.getLogger(altaMecanico.class.getName()).log(Level.SEVERE, null, ex);
           }
        }
    }//GEN-LAST:event_btnActualizarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(altaMecanico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(altaMecanico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(altaMecanico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(altaMecanico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                new altaMecanico().setVisible(true);

            }
        });
    }

    void mostrarTabla() {
        String[] cabecera = {"Id", "Nombre", "Paterno", "Materno", "Area", "Usuario","Celular","Act."};
        String[] registros = new String[8];
        String sql = "SELECT * FROM mecanico";
        //establecemos los anchos en pixeles de las columnas
        int[] anchos = {0, 150, 150, 150, 150, 150, 100,100,30};

        modelo = new DefaultTableModel(null, cabecera);
        try {

            Statement table;
            table = cn.createStatement();
            ResultSet rs = table.executeQuery(sql);
            while (rs.next()) {
                registros[0] = rs.getString("id");
                registros[1] = rs.getString("nombre");
                registros[2] = rs.getString("paterno");
                registros[3] = rs.getString("materno");
                registros[4] = rs.getString("area");
                registros[5] = rs.getString("usuario");
                registros[6] = rs.getString("celular");
                registros[7] = rs.getString("activo");

                modelo.addRow(registros);

            }
            tabla.setModel(modelo);
            for (int i = 0; i < cabecera.length; i++) {
                tabla.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
                tabla.setFont(new java.awt.Font("Tahoma", 0, 12));
            }
            tabla.getColumnModel().getColumn(0).setMaxWidth(0);
        tabla.getColumnModel().getColumn(0).setMinWidth(0);
        tabla.getColumnModel().getColumn(0).setPreferredWidth(0);
        } catch (SQLException ex) {
            System.out.println("Sin poder ejecutar el query a la tabla");
        }

    }

    void inicio() {
        btnNuevo.setEnabled(true);
        btnGrabar.setEnabled(false);
        btnCancelar.setEnabled(false);
        btnEditar.setEnabled(true);
        btnActualizar.setEnabled(false);
        jlNombre.setEnabled(false);
        jlPaterno.setEnabled(false);
        jlMaterno.setEnabled(false);
        jlUsuario.setEnabled(false);
        jlMunicipio.setEnabled(false);
        jlColonia.setEnabled(false);
        jlCelular.setEnabled(false);
        jlEmail.setEnabled(false);
        txtNombre.setEnabled(false);
        txtPaterno.setEnabled(false);
        txtMaterno.setEnabled(false);
        txtArea.setEnabled(false);
        txtUsuario.setEnabled(false);
        txtClave.setEnabled(false);
        txtCelular.setEnabled(false);
        txtEmail.setEnabled(false);
        chkActivo.setEnabled(false);

    }

    void limpiar() {
        txtNombre.setText("");
        txtPaterno.setText("");
        txtMaterno.setText("");
        txtArea.setText("");
        txtUsuario.setText("");
        txtClave.setText("");

        txtCelular.setText("");

        txtEmail.setText("");

    }

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnGrabar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JCheckBox chkActivo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jbSalir;
    private javax.swing.JLabel jlCelular;
    private javax.swing.JLabel jlColonia;
    private javax.swing.JLabel jlEmail;
    private javax.swing.JLabel jlMaterno;
    private javax.swing.JLabel jlMunicipio;
    private javax.swing.JLabel jlNombre;
    private javax.swing.JLabel jlPaterno;
    private javax.swing.JLabel jlUsuario;
    private javax.swing.JTable tabla;
    private javax.swing.JTextField txtArea;
    private javax.swing.JTextField txtCelular;
    private javax.swing.JTextField txtClave;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JLabel txtId;
    private javax.swing.JTextField txtMaterno;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPaterno;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables
}
